setwd("~/AMAT/MAGISTRSKI/Bayesova statistika/Domače naloge/Domaca3")
apt install texlive-latex-extra
dnf install texlive-tabu
install.packages(c('tinytex', 'rmarkdown'))
tinytex::install_tinytex()
install.packages(c('tinytex', 'rmarkdown'))
install.packages(c('tinytex', 'rmarkdown'))
install.packages(c("tinytex", "rmarkdown"))
tinytex::install_tinytex()
setwd("~/AMAT/Analysis-of-BlackJack-strategies")
source("~/AMAT/Analysis-of-BlackJack-strategies/reports/long-report/analysis.R")
plot(avg, type = 'l')
typeof(paroli_bet[,1])
typeof(paroli_bet)
paroli_bet <- data.frame(read_csv("data/paroli-bet.csv")[,-1])
typeof(paroli_bet)
typeof(paroli_bet[1,1])
paroli_bet[1,1]
source("~/AMAT/Analysis-of-BlackJack-strategies/reports/long-report/analysis.R")
plot(avg, type = 'l')
plot(paroli_bet$`1`, type = 'l')
paroli_bet[,1]
plot(paroli_bet[,1])
plot(paroli_bet[,1], type = 'l')
plot(paroli_bet[,c(1, 2, 3)])
plot(paroli_bet[,c(1, 2, 3)], type = 'l')
plot(paroli_bet[,1])
plot(paroli_bet[,1], type = 'l')
lines(paroli_bet[,2], type = 'l')
lines(paroli_bet[,3], type = 'l', col = 'red')
plot(paroli_bet[,1], type = 'l')
for (i in 2:500){
lines(paroli_bet[,i], type = 'l')
}
plot(paroli_bet[,1], type = 'l')
for (i in 2:100){
lines(paroli_bet[,i], type = 'l')
}
plot(paroli_bet[,1], type = 'l')
for (i in 2:50){
lines(paroli_bet[,i], type = 'l')
}
# isto se za balance
avg_balance <- c()
for (i in 1:100){
avg_balance <- c(avg_balance, mean(as.numeric(paroli_bet[i,])))
}
plot(avg_balance, type = 'l')
# isto se za balance
avg_balance <- c()
for (i in 1:100){
avg_balance <- c(avg_balance, mean(as.numeric(paroli_balance[i,])))
}
plot(avg_balance, type = 'l')
View(paroli)
paroli_bet <- data.frame(read_csv("data/paroli-bet.csv")[,-1])
paroli_balance <- data.frame(read_csv("data/paroli-balance.csv")[,-1])
paroli <- data.frame(read_csv("data/paroli.csv")[,-1])
View(paroli)
paroli_balance <- data.frame(read_csv("data/paroli-balance.csv")[,-1], colnames = c('a', 'b', 'c', 'd'))
View(paroli_balance)
View(paroli)
mean(paroli)
colMeans(paroli[sapply(paroli, is.numeric)])
mean(paroli[,1])
mean(paroli[,2])
paroli[,2]
source("~/AMAT/Analysis-of-BlackJack-strategies/reports/long-report/analysis.R")
colMeans(paroli[sapply(paroli, is.numeric)])
hist(avg_data)
avg_data[1]
avg_data
colMeans(paroli[sapply(paroli, is.numeric)])
a <- c(colMeans(paroli[sapply(paroli, is.numeric)]))
a
hist(avg_data)
avg_data
# data 0x, 3x, 5x, 10x
avg_data <- c(colMeans(paroli[sapply(paroli, is.numeric)]))
avg_data
# data 0x, 3x, 5x, 10x
avg_data <- colMeans(paroli[sapply(paroli, is.numeric)])
avg_data
hist(avg_data)
typeof(avg_data)
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]))
typeof(avg_data)
hist(avg_data)
typeof(avg_data[2])
a <- c(1, 2, 3, 4)
hist(a)
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c(0, 3, 5, 10))
avg_data
View(avg_data)
# data 0x, 3x, 5x, 10x
avg_data <- t(data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c(0, 3, 5, 10)))
View(avg_data)
hist(avg_data)
# data 0x, 3x, 5x, 10x
avg_data <- t(data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), çolnames = c(0, 3, 5, 10)))
View(avg_data)
# data 0x, 3x, 5x, 10x
avg_data <- t(data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), colnames = c(0, 3, 5, 10)))
View(avg_data)
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]))
View(avg_data)
# data 0x, 3x, 5x, 10x
avg_data <- t(data.frame(colMeans(paroli[sapply(paroli, is.numeric)])))
View(avg_data)
colnames(avg_data) <- c(0, 3, 5, 10)
View(avg_data)
hist(avg_data)
# data 0x, 3x, 5x, 10x
avg_data <- colMeans(paroli[sapply(paroli, is.numeric)]))
# data 0x, 3x, 5x, 10x
avg_data <- colMeans(paroli[sapply(paroli, is.numeric)])
hist(avg_data)
c <- (0, 3, 5, 10)
c <- c(0, 3, 5, 10)
c
plot(c)
hist(c)
hist(t(c))
data.frame(c)
hist(c)
a <- data.frame(c)
a
hist(a$c)
a$c
t(a$c)
hist(t(a$c))
ggplot(a, aes(x=c)) +  geom_histogram(binwidth = 1)
ggplot(a) +  geom_histogram(binwidth = 1)
a
a<-t(a)
a
a[1,]
hist(a[1,])
a
<-t(a)
a<-t(a)
a
ggplot(a, aes(x=c)) + geom_histogram()
typeof(a)
data.frame(a)
a <- data.frame(a)
ggplot(a, aes(x=c)) + geom_histogram()
a <- rbind(1, 2, 3, 4)
a
a <- rbind(a, c(5, 6, 7, 8))
a
data.frame(c(1, 2, 3, 4), c(6, 7, 8, 9))
a <- data.frame(c(1, 2, 3, 4), c(6, 7, 8, 9))
colnames(a) <- c('a', 'b')
a
ggplot(a, aes(x=a)) + geom_histogram()
ggplot(a, aes(x='a')) + geom_histogram()
ggplot(a, aes(x=a, y = b)) + geom_histogram()
a
colnames(a) <- ('c', 'd')
colnames(a) <- c('c', 'd')
a
ggplot(a, aes(x=c, y = d)) + geom_histogram()
ggplot(a, aes(x=c)) + geom_histogram()
ggplot(a, aes(x=d)) + geom_histogram()
s <- c(1, 2, 3, 5)
c
s
pllot(s)
plot(s)
plot(s, type = 'l')
hist(s)
s(1, 1, 3, 4, 5)
s <- c(1, 1, 2, 3, 5)
hist(s)
hist(paroli)
a
ggplot(a) + geom_histogram()
ggplot(a, aes(x=c)) + geom_histogram()
ggplot(a, aes(x=c, y = d)) + geom_histogram()
ggplot(a, aes(x=c, y = d)) + geom_histogram(stat = "identity")
# data 0x, 3x, 5x, 10x
avg_data <- colMeans(paroli[sapply(paroli, is.numeric)])
colnames(avg_data) <- c(0, 3, 5, 10)
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c(0, 3, 5, 10))
colnames(avg_data) <- c(0, 3, 5, 10)
avg_data
colnames(avg_data) <- c('a', 'b')
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c(0, 3, 5, 10))
colnames(avg_data) <- c('a', 'b')
ggplot(a, aes(x=a, y = b)) + geom_histogram(stat = "identity")
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c(0, 3, 5, 10))
ggplot(avg_data, aes(x=a, y = b)) + geom_histogram(stat = "identity")
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c(0, 3, 5, 10))
colnames(avg_data) <- c('a', 'b')
avg_data
ggplot(avg_data, aes(x=a, y = b)) + geom_histogram(stat = "identity")
ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity")
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c('0', '3', '5', '10'))
colnames(avg_data) <- c('a', 'b')
ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity")
ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", binwidth=1)
ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity")
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c('0', '3', '5', '10'))
colnames(avg_data) <- c('a', 'b')
ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity")
ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity") + scale_x_discrete(limits=avg_data$b)
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity") +
scale_x_discrete(limits=avg_data$b) + theme_bw()
plot_avg_data
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity") +
scale_x_discrete(limits=avg_data$b) + theme_classic()
plot_avg_data
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c('0x', '3x', '5x', '10x'))
colnames(avg_data) <- c('a', 'b')
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity") +
scale_x_discrete(limits=avg_data$b) + theme_classic()
plot_avg_data
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", fill = 'deeppink') +
scale_x_discrete(limits=avg_data$b) + theme_classic()
plot_avg_data
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", fill = 'deeppink1') +
scale_x_discrete(limits=avg_data$b) + theme_classic()
plot_avg_data
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", fill = 'deeppink3') +
scale_x_discrete(limits=avg_data$b) + theme_classic()
plot_avg_data
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", fill = 'deeppink3') +
scale_x_discrete(limits=avg_data$b) + theme_classic() + labs(x = 'Balance value', y = 'Average time')
plot_avg_data
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", fill = 'deeppink3') +
scale_x_discrete(limits=avg_data$b) + theme_classic() + labs(x = 'Balance value', y = 'Average number of dealings')
plot_avg_data
# average bet # mogoce damo na en graf za use strategije
avg_bet <- c()
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c('0x', '3x', '5x', '10x'))
colnames(avg_data) <- c('a', 'b')
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", fill = 'deeppink3') +
scale_x_discrete(limits=avg_data$b) + theme_classic() +
labs(x = 'Balance value', y = 'Average number of dealings', title = 'Paroli')
plot_avg_data
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", fill = 'deeppink3') +
scale_x_discrete(limits=avg_data$b) + theme_classic() +
labs(x = 'Balance value', y = 'Average number of dealings', title = 'Average number of dealings to get to the multiple of balance',
subtitle = 'Paroli system')
plot_avg_data
avg_data
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') +
scale_x_discrete(limits=avg_data$b) + theme_classic() +
labs(x = 'Balance value', y = 'Average number of dealings', title = 'Average number of dealings to get to the multiple of balance',
subtitle = 'Paroli system')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Balance value', y = 'Average number of dealings', title = 'Average number of dealings to get to the multiple of balance',
subtitle = 'Paroli system')
plot_data_0
plot_avg_data
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Balance value', y = 'Average number of dealings', title = 'Average number of dealings to get to the multiple of balance',
subtitle = 'Paroli system')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=20)
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1])
plot_data_0
# data 0x, 3x, 5x, 10x
avg_data <- data.frame(colMeans(paroli[sapply(paroli, is.numeric)]), c('0x', '3x', '5x', '10x'))
colnames(avg_data) <- c('a', 'b')
plot_avg_data <- ggplot(avg_data, aes(x=b, y = a)) + geom_histogram(stat = "identity", fill = 'deeppink3') +
scale_x_discrete(limits=avg_data$b) + theme_classic() +
labs(x = 'Balance value', y = 'Average number of dealings', title = 'Average number of dealings to get to the multiple of balance',
subtitle = 'Paroli system')
plot_avg_data
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1])
plot_data_0
avg_data
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1])
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], fill = 'red')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'red')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'deeppink3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'palevioletred2')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'palevioletred2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'deeppink3')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'palevioletred2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'deeppink3')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'palevioletred2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'deeppink2')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'palevioletred2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'deeppink')
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'palevioletred2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'deeppink', size = 2)
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'palevioletred2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'deeppink', size = 1)
plot_data_0
# data 0x
plot_data_0 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'palevioletred2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 0 balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[1,1], color = 'deeppink', size = 1, linetype="dashed")
plot_data_0
# data 3x
plot_data_3 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'palevioletred2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 3x balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[2,1], color = 'deeppink', size = 1, linetype="dashed")
plot_data_3
# data 3x
plot_data_3 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'plum3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 3x balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[2,1], color = 'mediumpurple4', size = 1, linetype="dashed")
plot_data_3
# data 3x
plot_data_3 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'plum3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 3x balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[2,1], color = 'mediumorchid4', size = 1, linetype="dashed")
plot_data_3
# data 5x
plot_data_5 <- ggplot(paroli, aes(x=c(1:500), y = data_0x)) + geom_histogram(stat = "identity", fill = 'rosybrown3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 5x balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[3,1], color = 'wheat4', size = 1, linetype="dashed")
plot_data_5
# data 3x
plot_data_3 <- ggplot(paroli, aes(x=c(1:500), y = data_3x)) + geom_histogram(stat = "identity", fill = 'plum3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 3x balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[2,1], color = 'mediumorchid4', size = 1, linetype="dashed")
plot_data_3
# data 5x
plot_data_5 <- ggplot(paroli, aes(x=c(1:500), y = data_5x)) + geom_histogram(stat = "identity", fill = 'rosybrown3') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 5x balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[3,1], color = 'wheat4', size = 1, linetype="dashed")
plot_data_5
plot_data_0
plot_data_3
plot_data_5
# data 10x
plot_data_10 <- ggplot(paroli, aes(x=c(1:500), y = data_10x)) + geom_histogram(stat = "identity", fill = 'khaki2') + theme_classic() +
labs(x = 'Game', y = 'Number of dealings', title = 'Number of dealings in each game to get to 10x balance',
subtitle = 'Paroli system') +
geom_hline(yintercept=avg_data[4,1], color = 'tan2', size = 1, linetype="dashed")
plot_data_10
